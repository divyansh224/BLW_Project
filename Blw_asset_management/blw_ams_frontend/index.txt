<!DOCTYPE html>
<html lang="en">
<head>
  <!--script-->
  <script>
  const user = localStorage.getItem("user_id");
  if (!user) {
    window.location.href = "login.html";
  }
</script>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>BLW Inventory Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      display: flex;
      height: 100vh;
      margin: 0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .sidebar {
      width: 260px;
      background: url("assets/1.jpeg") no-repeat center center;
      background-size: cover;
      color: white;
      padding: 20px;
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    .sidebar img {
      width: 100px;
      margin-bottom: 20px;
    }
    .sidebar h2 {
      font-size: 1.3rem;
      margin-bottom: 20px;
      text-align: center;
      background-color: rgba(0, 0, 0, 0.5);
      padding: 5px 10px;
      border-radius: 5px;
    }
    .menu a {
      width: 100%;
      text-align: center;
      margin: 5px 0;
      padding: 10px;
      color: white;
      text-decoration: none;
      background-color: rgba(183, 28, 28, 0.8);
      border-radius: 5px;
      transition: background-color 0.3s;
      display: block;
    }
    .menu a:hover {
      background-color: rgba(229, 57, 53, 0.9);
    }
    .main {
      flex: 1;
      padding: 30px;
      background-color: #f8f9fa;
      overflow-y: auto;
    }
    h1 {
      font-size: 1.8rem;
      margin-bottom: 20px;
    }
    #searchInput {
      padding: 10px;
      width: 100%;
      max-width: 400px;
      margin-bottom: 15px;
      border: 1px solid #ced4da;
      border-radius: 4px;
    }
    table {
      width: 100%;
      background-color: white;
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 0 10px rgba(0,0,0,0.05);
      margin-bottom: 40px;
    }
    th {
      background-color: #d32f2f;
      color: white;
      padding: 12px;
      text-align: left;
    }
    td {
      padding: 12px;
      vertical-align: middle;
    }
    tr:nth-child(even) {
      background-color: #f2f2f2;
    }
    input[type="number"] {
      width: 80px;
      padding: 5px;
      border-radius: 4px;
      border: 1px solid #ccc;
    }
    /* -- Added css for Modal --*/
    .modal {
      display: none; 
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0,0,0,0.5);
    }
    .modal-content {
      background-color: #fefefe;
      margin: 15% auto;
      padding: 20px;
      border: 1px solid #888;
      width: 80%;
      max-width: 500px;
      border-radius: 8px;
    }
    .close-button {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
    }
   </style>
   </head>
  <body>
  <div class="sidebar">
    <img src="assets/logo.png" alt="BLW Logo">
    <h2>BLW Inventory</h2>
    <div class="menu" id="sidebar-menu">
      <a href="maintenance.html">Maintenance</a>
    </div>
    
  </div>
  <div class="main">
    <button onclick="goBack()" class="btn btn-danger mb-3" style="display:none;" id="backButton">‚Üê Back to All Departments</button>
    <h1 id="dept-title">All Department Inventory Overview</h1>
    <input type="text" id="searchInput" onkeyup="filterTables()" placeholder="Search all items...">
    <div id="table-container">
      <div id="overview"></div>
    </div>
  </div>
  <button onclick="logout()" class="btn btn-danger">Logout</button>

  <script>
const department = localStorage.getItem('department');
const user_id = localStorage.getItem('user_id');
const role = localStorage.getItem('role');

const overviewDiv = document.getElementById("overview");
const sidebarMenu = document.getElementById("sidebar-menu");

// List of departments (can be fetched from backend if you add an API)
const departments = [
  "Design Department",
  "Electronic Data Processing (EDP)",
  "General Administration",
  "Loco Training School (LTS)",
  "Planning Department",
  "Safety Department",
  "Stores Department",
  "Technical Training Centre (TTC)"
];

// Helper: fetch inventory for a department
async function fetchInventory(dept) {
  const res = await fetch(`http://localhost:3000/inventory/${encodeURIComponent(dept)}`);
  if (!res.ok) return [];
  return await res.json(); // [{item: "...", quantity: ...}, ...]
}

// Helper: update inventory count in backend
async function updateInventory(dept, item, quantity) {
  await fetch('http://localhost:3000/inventory/update', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ department: dept, item, quantity: parseInt(quantity) })
  });
}

// --- ADDED: Helper to add a new asset ---
async function addAssetAPI(dept, item, quantity) {
  const response = await fetch('http://localhost:3000/inventory/add', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ department: dept, item, quantity: parseInt(quantity) })
  });
  if (!response.ok) {
      alert('Error: Could not add the asset. Please check the backend.');
      return false;
  }
  return true;
}
  // --- ADDED: Functions to handle the modal ---
function openAddAssetModal() {
    // Populate department dropdown
    const deptSelect = document.getElementById('newAssetDepartment');
    deptSelect.innerHTML = ''; // Clear old options
    departments.forEach(dept => {
        const option = document.createElement('option');
        option.value = dept;
        option.textContent = dept;
        deptSelect.appendChild(option);
    });
    // Reset form and display
    document.getElementById('addAssetForm').reset();
    document.getElementById('addAssetModal').style.display = 'block';
}

async function addNewAsset() {
    const dept = document.getElementById('newAssetDepartment').value;
    const item = document.getElementById('newAssetItem').value;
    const quantity = document.getElementById('newAssetQuantity').value;

    if (!dept || !item || !quantity) {
        alert('Please fill out all fields.');
        return;
    }
    
    const success = await addAssetAPI(dept, item, quantity);
    
    if (success) {
        document.getElementById('addAssetModal').style.display = 'none';
        alert('Asset added successfully!');
        renderOverview(); // Refresh the view to show the new asset
    }
}


// Render sidebar links
function renderSidebar() {
  sidebarMenu.innerHTML = '<a href="maintenance.html">Maintenance</a>';
  if (isAdmin) {
    departments.forEach(dept => {
      const link = document.createElement("a");
      link.textContent = dept;
      link.onclick = () => showDepartment(dept);
      sidebarMenu.appendChild(link);
    });
  } else if (department) {
    const link = document.createElement("a");
    link.textContent = department;
    link.onclick = () => showDepartment(department);
    sidebarMenu.appendChild(link);
  }
}

// Render overview of all departments
async function renderOverview() {
  overviewDiv.innerHTML = "";
  if (isAdmin) {
    for (const dept of departments) {
      const items = await fetchInventory(dept);
      const rows = items.map(i => `<tr><td>${i.item}</td><td>${i.quantity}</td></tr>`).join("");
     overviewDiv.innerHTML += `
  <h3>${dept}</h3>
  <button class="btn btn-primary mb-2" onclick="printPDF('${dept}')">Print PDF</button>
  <table class="table table-bordered inventoryTable">
    <thead><tr><th>Item</th><th>Quantity</th></tr></thead>
    <tbody>${rows}</tbody>
  </table>
   `;
    }
    document.getElementById("dept-title").textContent = "Admin Panel: All Departments";
  } else if (department) {
    const items = await fetchInventory(department);
    const rows = items.map(i => `<tr><td>${i.item}</td><td>${i.quantity}</td></tr>`).join("");
   overviewDiv.innerHTML = `
  <h3>${department}</h3>
  <button class="btn btn-primary mb-2" onclick="printPDF('${department}')">Print PDF</button>
  <table class="table table-bordered inventoryTable">
    <thead><tr><th>Item</th><th>Quantity</th></tr></thead>
    <tbody>${rows}</tbody>
  </table>
`;
    document.getElementById("dept-title").textContent = department;
  } else {
    overviewDiv.innerHTML = `<p class="text-danger">üö´ Invalid department or not logged in.</p>`;
  }
}

// Show department details and allow editing
async function showDepartment(dept) {
  document.getElementById("dept-title").textContent = dept;
  const container = document.getElementById("table-container");
  const items = await fetchInventory(dept);
  const rows = items.map((item, index) =>
  `<tr>
    <td>${item.item}</td>
    <td>
      ${isAdmin ? 
        `<input type='number' class='form-control' value='${item.quantity}' 
          onchange='updateInventory("${dept}", "${item.item}", this.value)' />`
        : item.quantity}
    </td>
  </tr>`
).join("");
  container.innerHTML = `
    <table class="table table-bordered inventoryTable">
      <thead><tr><th>Item</th><th>Quantity</th></tr></thead>
      <tbody>${rows}</tbody>
    </table>
  `;
  document.getElementById("backButton").style.display = "inline-block";
}

// Go back to overview
function goBack() {
  document.getElementById("dept-title").textContent = "Department Inventory Overview";
  document.getElementById("table-container").innerHTML = '<div id="overview">' + overviewDiv.innerHTML + '</div>';
  document.getElementById("backButton").style.display = "none";
}

// Filter tables by search input
function filterTables() {
  const input = document.getElementById("searchInput").value.toLowerCase();
  const tables = document.querySelectorAll(".inventoryTable tbody");
  tables.forEach(tbody => {
    Array.from(tbody.rows).forEach(row => {
      const item = row.cells[0].textContent.toLowerCase();
      row.style.display = item.includes(input) ? "" : "none";
    });
  });
}

// Logout function
function logout() {
  localStorage.clear();
  window.location.href = "login.html";
}

// Determine admin access
const isAdmin = role === "Admin" && user_id === "admin" && department === "Administration";

// Initial render
renderSidebar();
renderOverview();
if(isAdmin){
  document.getElementById('addAssetBtn').style.display='block';
}

function printPDF(dept) {
  window.open(`http://localhost:3000/reports/inventory/${encodeURIComponent(dept)}/pdf`, '_blank');
}

</script>
</body>
</html>